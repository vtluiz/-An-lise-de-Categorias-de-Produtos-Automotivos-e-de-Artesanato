importar pandas como pd
importar matplotlib.pyplot como plt
importar seaborn como sns

# Carregar os dados
url = 'https://drive.google.com/uc?id=1JE4-gKKgr7abGKgq3fQFz7lloK5x3Qi1&export=download'
dados = pd.read_csv(url, cabeçalho=Nenhum, nomes=['id', 'nome_da_categoria'])

# Exibir as primeiras linhas do dataframe
imprimir(dados.cabeça())

# Separar os dados em duas indústrias: Artesanato e Automotiva
artes_e_artesanato = [
    'Confecção de miçangas e joias', 'Decoração de tecidos', 'Suprimentos para tricô e crochê',
    'Suprimentos para impressão', 'Suprimentos para scrapbooking e carimbos', 'Produtos de costura',
    'Tecidos para artesanato e passatempos', 'Suprimentos para bordados', 'Armazenamento para artes, ofícios e costura',
    'Materiais para pintura, desenho e arte', 'Materiais e materiais para artesanato', 'Materiais para embrulho de presentes',
    'Decorações de Festa'
]

automotivo = [
    'Tintas automotivas e suprimentos para pintura', 'Equipamentos para veículos pesados ​​e comerciais',
    'Pneus e rodas automotivas', 'Ferramentas e equipamentos automotivos',
    'Peças e acessórios de desempenho automotivo', 'Cuidados com o carro'
]

# Classificar os produtos
dados['indústria'] = dados['nome_da_categoria'].aplicar(
    lambda x: 'Artesanato' se x em artes_e_ofícios senão ('Automotiva' se x em automotivo senão 'Outros')
)

# Contar o número de categorias por indústria
category_counts = dados['indústria'].value_counts()

# Contar o número de produtos por categoria
product_counts = dados.groupby(['indústria', 'nome_da_categoria']).size().unstack(fill_value=0)

# Plotar gráficos
plt.figure(tamanhodafigura=(14, 10))

# Gráfico de Barras: Quantidade de categorias por indústria
plt.subplot(2, 2, 1)
category_counts.plot(tipo='barra', cor=['#ff9999','#66b3ff'])
plt.title('Número de Categorias por Indústria')
plt.xlabel('Indústria')
plt.ylabel('Número de Categorias')

# Gráfico de Pizza: Proporção de cada categoria dentro de cada setor
plt.subplot(2, 2, 2)
dados['indústria'].valor_contagens().plot(tipo='torta', autopct='%1.1f%%', cores=['#ff9999','#66b3ff'])
plt.title('Proporção das Categorias por Indústria')
plt.ylabel('')

# Histograma: Distribuição de produtos em diferentes categorias
plt.subplot(2, 2, 3)
para a indústria em data['industry'].unique():
    subconjunto = dados[dados['indústria'] == indústria]
    subset['category_name'].value_counts().plot(kind='hist', alpha=0.5, label=indústria)
plt.title('Distribuição de Produtos por Categoria')
plt.xlabel('Número de Produtos')
plt.legenda()

plt.layout_apertado()
plt.mostrar()

# Relatório Final (esboço)
def generate_report():
    com open('relatorio_final.txt', 'w') como arquivo:
        file.write("Análise de Categorias de Produtos\n")
        arquivo.write("="*40 + "\n\n")
        file.write("Descrição dos Dados e Metodologia de Análise\n")
        file.write("Os dados foram carregados a partir do arquivo fornecido. Foram identificados dois setores: Artesanato e Automotiva.\n")
        file.write("A análise incluiu inclusão de categorias e produtos, e a criação de visualizações para entender melhor a distribuição e tendências.\n\n")
        file.write("Visualizações\n")
        file.write("1. Gráfico de Barras: Mostra o número de categorias em cada setor.\n")
        file.write("2. Gráfico de Pizza: Apresenta a proporção de categorias por indústria.\n")
        file.write("3. Histograma: Exibe a distribuição de produtos nas categorias.\n\n")
        file.write("Recomendações\n")
        file.write("Com base na análise, recomenda-se aumentar a visibilidade das categorias com menor representação e revisar estratégias de marketing para melhorar a presença dos produtos.\n")
        file.write("Além disso, considerar a análise de tendências ao longo do tempo pode fornecer insights adicionais para ajustes estratégicos.\n")

gerar_relatório()
